NorthBridge   SouthBridge
challenge: protection
how to execute a program with restricted privilege
Solution: through a simulator

dual-mode operation
user mode,  kernel mode

protected instruction
IO memory halt
protection rings  ring 0 is kernel mode

2. generating and handling events
change mode to kernel mode and invoke code to handle event
os is one big event handler
two kinds: interrupts and  exception

computer is more than CPU, IO devices occasionally need attention
solution: polling   polling is like picking up your phone every few seconds to see if you have a call
interrupt request lines(IRQs)
programmable interrupt controller(PIC): when and which decvice wish to interrupt
Interrupt Vector Table(IVT) in x86 called interrupt descriptor table

interrupt are the basis for asynchronouos IO

usage2: timer
timer is critical

trap and fault

trap to kernel mode, save state -> trap handler -> read(ï¼‰ kernel routine

Process Abstraction
uniporgramL process run from start to full completion
load a job from disk into memory, execute it, unload the job
low utilization of hardware

multiple process
run more than one process at a time
speed and hardware utilization
increase CPU utilization and reduce latency(concurrently)

kernel's view to process
address space, code, data, execution stack
program counter, register

name: PID
PCB(Process Control Block)
execution state
how many processes can a system support?

new ->ready -> running -> waiitng

how OS keep track of processes:
1. process list,  slow
2. state queues


